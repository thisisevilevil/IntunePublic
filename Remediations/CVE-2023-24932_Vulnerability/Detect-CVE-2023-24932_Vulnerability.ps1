<#
This remediation script will detect if protection against CVE-2023-24932 have been applied.
If not, we will proceed to remediation and apply the relevant reg keys

Only supports Windows 10 22H2 and Windows 11 22H2 so far.

Article from MS: https://support.microsoft.com/en-us/topic/kb5025885-how-to-manage-the-windows-boot-manager-revocations-for-secure-boot-changes-associated-with-cve-2023-24932-41a975df-beb2-40c1-99a3-b3ff139f832d

NOTES: 
1) Protection will only take effect after 2 reboots has been applied. This is not enforced in these scripts.
2) Ensure you have access to bitlocker recovery keys
3) If SecureBoot is not enabled on device, it will log an error. This should prompt you to enable secureboot so the signatures can be updated. 
-> Do this with care, as on some systems this will force the system to switch from Legacy Boot to UEFI Boot preventing the system to boot to the operating system
-> Consider replacing these systems as they are probably already very old

#>

$fixcheck = System.Text.Encoding]::ASCII.GetString((Get-SecureBootUEFI db).bytes) -match 'Windows UEFI CA 2023'
$targetregkey = 'HKLM:\SYSTEM\CurrentControlSet\Control\Secureboot'
$targetname = 'AvailableUpdates'
$targetvalue = '48'


function assesreadiness {
$fixok = $false
$CurrentBuild = (Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion' -Name CurrentBuild).CurrentBuild
$UBR = (Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion' -Name UBR).UBR
    
$seurebootstatus = Confirm-SecureBootUEFI
if (!($seurebootstatus -eq $true)) {Write-output "SecureBoot is not enabled on this device. Unable to continue" ; exit 1}
    
#Windows 11 22H2
if ($currentbuild -eq '22621') {
    if ($UBR -ge '1992') {Write-output "Device already running July 2023 patch or later. Should be ok to apply SecureBoot security fix"
    $fixok = $true}
}
    
#Windows 10 22H2
if ($currentbuild -eq '19045') {
    if ($UBR -ge '3208') {Write-output "Device already running July 2023 patch or later. Should be ok to apply SecureBoot security fix"
    $fixok = $true}
    }
    
if ($fixok -eq $true) {
    Write-output "OS Pre-reqs for applying secureboot fix should be met."}
    else {Write-output "OS pre-req for applying fix is not met. Please update OS to latest build" ; exit 1}
    
}

if ($fixcheck -eq $true) {Write-output "Fix for CVE-2023-24932 already applied to this device, no actions performed"
exit
}

assesreadiness

#Check if the fix has already been deployed on this device (This is a very crude way of doing it.. will try and find an improved way of checking if update has been applied)
$intunedetection = Get-ItemPropertyValue $deploymentkey -Name SecureBootFix
if (!($intunedetection -eq 'Deployed')) {Write-output "Remediation script did not complete before on this device before."}
    else {Write-output "Remediation script already run on this device. Secure Boot fix should be applied" ; exit}


$currentvalue = Get-ItemPropertyValue $targetregkey -Name $targetname
if (!($currentvalue -eq $targetvalue)) {
    Write-output "AvailableUpdates not configured with correct value of $targetvalue and detection key not manually set. Proceeding to remediation" ; exit 1
}
    else {Write-output "Fix should already be applied. No changes performed"}

